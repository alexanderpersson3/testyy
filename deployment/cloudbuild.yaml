steps:
# Install dependencies
- name: 'node:20'
  entrypoint: npm
  args: ['install']

# Run tests
- name: 'node:20'
  entrypoint: npm
  args: ['test']

# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/rezepta-backend', '.']

# Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/rezepta-backend']

# Deploy container image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - 'rezepta-backend'
  - '--image'
  - 'gcr.io/$PROJECT_ID/rezepta-backend'
  - '--region'
  - 'us-central1'
  - '--platform'
  - 'managed'
  - '--allow-unauthenticated'
  - '--memory'
  - '1Gi'
  - '--cpu'
  - '1'
  - '--min-instances'
  - '1'
  - '--max-instances'
  - '10'
  - '--set-env-vars'
  - 'NODE_ENV=production'
  - '--set-secrets'
  - 'JWT_SECRET=jwt-secret:latest,MONGODB_URI=mongodb-uri:latest'
  - '--vpc-connector'
  - 'rezepta-vpc'
  - '--service-account'
  - 'rezepta-backend@$PROJECT_ID.iam.gserviceaccount.com'

# Update the domain mapping
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'domain-mappings'
  - 'create'
  - '--service'
  - 'rezepta-backend'
  - '--domain'
  - 'api.rezepta.com'
  - '--region'
  - 'us-central1'
  - '--platform'
  - 'managed'

images:
- 'gcr.io/$PROJECT_ID/rezepta-backend'

options:
  logging: CLOUD_LOGGING_ONLY 